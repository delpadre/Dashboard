import streamlit as st
import pandas as pd
import numpy as np
from scipy.stats import norm, binom
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

st.markdown(
    """
    <style>
        /* Fundo escuro para contraste */
        .stApp {
            background-color: #1E1E1E !important;
        }
        
        /* Sidebar (menu nativo) com cor escura */
        section[data-testid="stSidebar"] {
            background-color: #111111;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.5);
        }

        /* Estilo da sidebar */
        .sidebar .sidebar-content {
            background-color: #1e1e1e;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.5);
        }

        /* Estilo para o menu de navega√ß√£o */
        .stSidebarNav {
            background-color: #2b2b2b;
            border-radius: 10px;
        }

        /* Itens do menu */
        .sidebar .sidebar-item {
            font-size: 20px;
            font-weight: bold;
            color: white;
            margin-bottom: 12px;
            padding: 8px;
            border-radius: 8px;
            transition: background-color 0.3s ease, padding-left 0.3s ease;
        }

        /* Estilizando a imagem do perfil */
        .stImage img {
            border-radius: 10px;
            transform: translateY(-5px) scale(1.05);  /* Efeito de zoom e eleva√ß√£o */
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.4); /* Sombra para destacar a imagem */
            transition: transform 0.3s ease, box-shadow 0.3s ease; /* Transi√ß√£o suave */
        }

        /* Efeito hover: A imagem ficar√° mais zoomada e a sombra ficar√° mais forte */
        .stImage img:hover {
            transform: translateY(-5px) scale(1.1); /* Aumento do zoom e mais eleva√ß√£o */
            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.6); /* Sombra mais forte */
        }

        /* Ajustes gerais para texto */
        .stMarkdown {
            font-family: 'Arial', sans-serif;
            color: #E0E0E0;
        }

        /* Ajuste de fonte em headings */
        h1, h2 {
            font-family: 'Helvetica Neue', sans-serif;
            font-weight: bold;
            color: #FF9F00;
        }
        
        /* Estilizando o cabe√ßalho */
        header {
            background-color: #1E1E1E !important;  /* Adicionando a mesma cor de fundo */
        }

        /* Melhorando a formata√ß√£o dos textos */
        .section-title {
            font-size: 24px;
            font-weight: bold;
            color: white;
            margin-top: 20px;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .fade-in {
            animation: fadeIn 0.8s ease-in-out;
        }
    </style>
    """,
    unsafe_allow_html=True,
)

# Sidebar com imagem e nome
with st.sidebar:
    st.image("Perfil.jpeg", caption="Rafael Jorge Del Padre", use_container_width=True)

# T√≠tulo da p√°gina
st.title("üìä An√°lise de Dados")
st.write("An√°lise de dados aplicada ao acesso a √°gua pot√°vel e saneamento (WHO/UNICEF).")

# Carregando o banco de dados
file_path = "pages/Sleep_Efficiency_Updated.csv"
df = pd.read_csv(file_path)

# Exibindo o banco de dados
st.write("### Visualiza√ß√£o dos Dados")
st.dataframe(df.head())
st.write("Colunas dispon√≠veis:", df.columns.tolist())

# Op√ß√µes de an√°lise
st.write("### Selecione as an√°lises desejadas")
analises = st.multiselect("Escolha as an√°lises:", [
    "Apresenta√ß√£o dos Dados e Tipos de Vari√°veis",
    "Medidas Centrais e Dispers√£o",
    "Correla√ß√£o entre Vari√°veis",
    "Aplica√ß√£o de Distribui√ß√µes Probabil√≠sticas"
])

# Apresenta√ß√£o dos dados e tipos de vari√°veis
if "Apresenta√ß√£o dos Dados e Tipos de Vari√°veis" in analises:
    st.write("## üìå Apresenta√ß√£o dos Dados e Tipos de Vari√°veis")
    st.write(df.dtypes)
    st.write("Principais perguntas de an√°lise:")
    st.write("- Como as vari√°veis influenciam a efici√™ncia do sono?")
    st.write("- Existe correla√ß√£o entre fatores como idade e tempo total de sono?")
    st.write("- Quanto mais sono profundo eu tiver, menor sera meu sono rem?")
    

# Medidas Centrais e Dispers√£o
if "Medidas Centrais e Dispers√£o" in analises:
    st.write("## üìä Medidas Centrais e Dispers√£o")
    df_numerico = df.select_dtypes(include=np.number)  # Filtrar apenas colunas num√©ricas
    
    st.write("M√©dia:", df_numerico.mean())
    st.write("Mediana:", df_numerico.median())
    st.write("Moda:", df_numerico.mode().iloc[0])
    st.write("Desvio Padr√£o:", df_numerico.std())
    
    if "Sleep efficiency" in df_numerico.columns:
        fig, ax = plt.subplots()
        sns.histplot(df_numerico["Sleep efficiency"].dropna(), kde=True, ax=ax)
        ax.set_title("Distribui√ß√£o da Efici√™ncia do Sono")
        st.pyplot(fig)
        st.write("\n")
        st.write(" Interpreta√ß√£o: A distribui√ß√£o parece assim√©trica, com uma cauda √† esquerda (valores menores de efici√™ncia s√£o menos frequentes), o que sugere que a maioria das pessoas tem sono eficiente, enquanto casos de baixa efici√™ncia s√£o exce√ß√µes. A presen√ßa da curva indica que os dados podem seguir uma distribui√ß√£o aproximada de uma campainha (normal ou semelhante), mas com uma inclina√ß√£o para valores mais altos de efici√™ncia.")
        st.write("Conclus√µes Poss√≠veis: A amostra analisada (seja de indiv√≠duos, noites de sono ou outro crit√©rio) tende a ter uma qualidade de sono elevada, com a maioria alcan√ßando efici√™ncia acima de 90%.")
        st.write("Poderia haver um vi√©s na coleta de dados, como a inclus√£o de pessoas com bons h√°bitos de sono ou o uso de dispositivos que favorecem registros de alta efici√™ncia.Valores abaixo de 0,7 s√£o raros, o que pode indicar que pessoas com sono muito fragmentado ou problemas de ins√¥nia est√£o sub-representadas.")
        st.write("Se voc√™ tiver mais contexto sobre os dados (como a fonte ou o tamanho da amostra), posso refinar a an√°lise. Caso queira uma investiga√ß√£o mais detalhada, posso oferecer buscar informa√ß√µes adicionais!.")
        

# Correla√ß√£o entre vari√°veis
if "Correla√ß√£o entre Vari√°veis" in analises:
    st.write("## üîç Correla√ß√£o entre Vari√°veis")
    df_corr = df.select_dtypes(include=np.number)  # Garantir que apenas colunas num√©ricas sejam analisadas
    corr = df_corr.corr()
    fig, ax = plt.subplots()
    fig, ax = plt.subplots(figsize=(12, 8))
    sns.heatmap(corr, annot=True, cmap="coolwarm", ax=ax)
    st.pyplot(fig)
    st.write("Iterpreta√ß√£o: Fatores que mais afetam a efici√™ncia do sono:O consumo de cafe√≠na (-0,91) e os despertares (-0,81) s√£o os fatores mais fortemente associados a uma menor efici√™ncia do sono.  consumo de √°lcool tamb√©m tem um impacto negativo moderado (-0,39).  porcentagem de sono REM (0,62) e a frequ√™ncia de exerc√≠cios (0,28) t√™m associa√ß√µes positivas com a efici√™ncia do sono.")
    st.write("Rela√ß√£o entre as fases do sono: ono profundo e sono leve t√™m uma forte correla√ß√£o negativa (-0,97), indicando que eles competem pelo tempo total de sono. Sno REM tem uma correla√ß√£o positiva moderada com efici√™ncia do sono (0,62), sugerindo que um sono mais eficiente pode favorecer o sono REM.")
    st.write("Estilo de vida: afe√≠na e √°lcool t√™m impactos negativos claros na qualidade do sono, aumentando despertares e sono leve, e reduzindo a efici√™ncia e o sono profundo. xerc√≠cios t√™m um efeito positivo, mas relativamente fraco, na efici√™ncia e nas fases do sono.")
    st.write("Poderia haver um vi√©s na coleta de dados, como a inclus√£o de pessoas com bons h√°bitos de sono ou o uso de dispositivos que favorecem registros de alta efici√™ncia.Valores abaixo de 0,7 s√£o raros, o que pode indicar que pessoas com sono muito fragmentado ou problemas de ins√¥nia est√£o sub-representadas.")
    st.write("\n")

if "Aplica√ß√£o de Distribui√ß√µes Probabil√≠sticas" in analises:
    st.write("## üé≤ Aplica√ß√£o de Distribui√ß√µes Probabil√≠sticas")
    
    if "Sleep efficiency" in df.columns:
        sleep_efficiency = df["Sleep efficiency"].dropna()
        
        if not sleep_efficiency.empty:
            mu, sigma = sleep_efficiency.mean(), sleep_efficiency.std()
            x = np.linspace(mu - 3*sigma, mu + 3*sigma, 100)
            y = norm.pdf(x, mu, sigma)
            fig, ax = plt.subplots()
            ax.plot(x, y, label="Distribui√ß√£o Normal", color='orange')
            ax.set_title("Distribui√ß√£o Normal da Efici√™ncia do Sono")
            st.pyplot(fig)
            st.write("\n")
            st.write("A distribui√ß√£o normal foi escolhida porque a efici√™ncia do sono √© uma vari√°vel cont√≠nua e tende a seguir uma distribui√ß√£o sim√©trica em torno da m√©dia. Isso permite analisar a dispers√£o e a probabilidade de diferentes n√≠veis de efici√™ncia do sono.")
            st.write("\n")
            
            # Distribui√ß√£o Binomial
            n = 10  # N√∫mero de noites analisadas
            p = min(max(mu, 0.01), 0.99)  # Probabilidade baseada na m√©dia do dataset
            x_binom = np.arange(0, n + 1)
            y_binom = binom.pmf(x_binom, n, p)
            
            fig, ax = plt.subplots()
            ax.bar(x_binom, y_binom, color='blue', alpha=0.7, label="Distribui√ß√£o Binomial")
            ax.set_title("Distribui√ß√£o Binomial da Efici√™ncia do Sono")
            ax.set_xlabel("N√∫mero de Noites com Boa Efici√™ncia do Sono")
            ax.set_ylabel("Probabilidade")
            ax.legend()
            
            st.pyplot(fig)
            st.write("\n")
            st.write("A distribui√ß√£o binomial foi escolhida para modelar a probabilidade de uma pessoa ter um certo n√∫mero de noites com boa efici√™ncia do sono em um per√≠odo de 10 noites. Como a efici√™ncia do sono pode ser interpretada como um sucesso ou falha em cada noite, a binomial se ajusta bem a esse contexto.")
            st.write("\n")
        else:
            st.write("‚ö†Ô∏è N√£o h√° dados suficientes para calcular as distribui√ß√µes.")
    else:
        st.write("‚ö†Ô∏è A coluna 'Sleep efficiency' n√£o est√° dispon√≠vel no dataset.")

st.write("### üöÄ An√°lise Conclu√≠da! Selecione novas op√ß√µes para explorar mais insights.")